#ifndef __TB_AADL_soi_tk1_types__H
#define __TB_AADL_soi_tk1_types__H

/**************************************************************************
  Copyright (c) 2013-2016 Rockwell Collins and the University of
  Minnesota. Developed with the sponsorship of the Defense Advanced
  Research Projects Agency (DARPA).

  Permission is hereby granted, free of charge, to any person
  obtaining a copy of this data, including any software or models
  in source or binary form, as well as any drawings,
  specifications, and documentation (collectively "the Data"), to
  deal in the Data without restriction, including without
  limitation the rights to use, copy, modify, merge, publish,
  distribute, sublicense, and/or sell copies of the Data, and to
  permit persons to whom the Data is furnished to do so, subject to
  the following conditions:

  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Data.

  THE DATA IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS, SPONSORS,
  DEVELOPERS, CONTRIBUTORS, OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
  CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  CONNECTION WITH THE DATA OR THE USE OR OTHER DEALINGS IN THE
  DATA.
 **************************************************************************/

/**************************************************************************

  ***AUTOGENERATED CODE: DO NOT MODIFY***

This file contains the datatypes used for communications between
AADL components as defined in the system implementation soi_tk1.

 **************************************************************************/

#include <stdbool.h>
#include <stdint.h>
#ifndef TB_VERIFY
#include <stddef.h>
#endif // TB_VERIFY

#define __TB_OS_CAMKES__
#define TB_MONITOR_READ_ACCESS 111
#define TB_MONITOR_WRITE_ACCESS 222

#ifndef TB_VERIFY
#define MUTEXOP(OP)\
if((OP) != 0) {\
  fprintf(stderr,"Operation " #OP " failed in %s at %d.\n",__FILE__,__LINE__);\
  *((int*)0)=0xdeadbeef;\
}
#else 
#define MUTEXOP(OP) OP
#endif // TB_VERIFY
#ifndef TB_VERIFY
#define CALLBACKOP(OP)\
if((OP) != 0) {\
  fprintf(stderr,"Operation " #OP " failed in %s at %d.\n",__FILE__,__LINE__);\
  *((int*)0)=0xdeadbeef;\
}
#else 
#define CALLBACKOP(OP) OP
#endif // TB_VERIFY
typedef uint8_t SMACCM_DATA__UART_Buffer [255]; 

typedef 
      struct SMACCM_DATA__UART_Packet_i { 
         SMACCM_DATA__UART_Buffer buf  ; 
         int32_t buf_len  ; 
      } SMACCM_DATA__UART_Packet_i ; 

typedef uint8_t MissionSoftware__mission_command_impl [23264]; 

typedef 
      struct tb_SMACCM_DATA__UART_Buffer_container { 
         SMACCM_DATA__UART_Buffer f  ; 
      } tb_SMACCM_DATA__UART_Buffer_container ; 

typedef 
      struct tb_MissionSoftware__mission_command_impl_container { 
         MissionSoftware__mission_command_impl f  ; 
      } tb_MissionSoftware__mission_command_impl_container ; 

#endif // __TB_AADL_soi_tk1_types__H
