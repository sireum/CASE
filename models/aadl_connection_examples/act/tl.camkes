import <std_connector.camkes>;

import "interfaces/sb_ConnectionExamples__shared_data_impl_shared_var.idl4";
import "interfaces/add_two_numbers.idl4";
import "interfaces/subtract_two_numbers.idl4";
import "interfaces/add_subtract_interface.idl4";
import "components/sender/sender.camkes";
import "components/receiver/receiver.camkes";
import "components/TimeServer/TimeServer.camkes";
import "components/dispatch_periodic/dispatch_periodic.camkes";
import "components/sb_Monitors/sb_r_eventDataPort_Monitor/sb_r_eventDataPort_Monitor.camkes";
import "components/sb_Monitors/sb_r_dataPort_Monitor/sb_r_dataPort_Monitor.camkes";

connector seL4TimeServer {
  from Procedures template "seL4TimeServer-from.template.c";
  to Procedure template "seL4TimeServer-to.template.c";
}

connector seL4GlobalAsynchCallback {
  from Events template "seL4GlobalAsynchCallback-from.template.c";
  to Event template "seL4GlobalAsynchCallback-to.template.c";
}

assembly {
  composition {
    component sender s;
    component receiver r;
    component TimeServer time_server;
    component dispatch_periodic dispatch_periodic_inst;
    component sb_r_eventDataPort_Monitor sb_r_eventdataport_monitor;
    component sb_r_dataPort_Monitor sb_r_dataport_monitor;

    connection seL4TimeServer conn1(from s.sb_timer, to time_server.the_timer);
    connection seL4Notification conn2(from dispatch_periodic_inst.s_periodic_dispatcher, to s.sb_timer_complete);
    connection seL4TimeServer conn3(from dispatch_periodic_inst.timer, to time_server.the_timer);
    connection seL4GlobalAsynchCallback conn4(from time_server.timer_notification, to dispatch_periodic_inst.timer_complete);
    connection seL4SharedData conn5(from r.sharedData, to s.sharedData);
    connection seL4RPCCall conn6(from s.sb_dataPort0, to sb_r_dataport_monitor.mon);
    connection seL4RPCCall conn7(from r.sb_dataPort, to sb_r_dataport_monitor.mon);
    connection seL4Notification conn8(from sb_r_dataport_monitor.monsig, to r.sb_dataPort_notification);
    connection seL4RPCCall conn9(from s.sb_eventDataPort0, to sb_r_eventdataport_monitor.mon);
    connection seL4RPCCall conn10(from r.sb_eventDataPort, to sb_r_eventdataport_monitor.mon);
    connection seL4Notification conn11(from sb_r_eventdataport_monitor.monsig, to r.sb_eventDataPort_notification);
    connection seL4Notification conn12(from s.eventPort, to r.eventPort);
    connection seL4RPCCall conn13(from s.add_subtract, to r.add_subtract);
  }

  configuration {
    s.sb_timer_attributes = 0;
    s.sb_timer_global_endpoint = "sender_sb_timer";
    s.priority = 201;
    s._control_stack_size = 1024;
    dispatch_periodic_inst.timer_attributes = 1;
    dispatch_periodic_inst.timer_global_endpoint = "dispatch_periodic_timer";
    dispatch_periodic_inst.timer_complete_global_endpoint = "dispatch_periodic_timer_complete";
    dispatch_periodic_inst.priority = 201;
  }
}
