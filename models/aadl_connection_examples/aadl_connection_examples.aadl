package ConnectionExamples
public 
	with Base_Types;
	with SB_SYS;
	with Data_Model;

data shared_data
  properties
    Data_Model::Data_Representation => Struct;
end shared_data;

data implementation shared_data.impl
  subcomponents
    F : data Base_Types::Unsigned_32;
end shared_data.impl;

subprogram add_two_numbers
features
	A: in parameter Base_Types::Unsigned_32;
	B: in parameter Base_Types::Unsigned_32;
	result: out parameter Base_Types::Unsigned_32;
end add_two_numbers;

subprogram subtract_two_numbers
features
	A: in parameter Base_Types::Unsigned_32;
	B: in parameter Base_Types::Unsigned_32;
	result: out parameter Base_Types::Unsigned_32;
end subtract_two_numbers;

subprogram group add_subtract_interface
features
	add: provides subprogram access add_two_numbers;
	subtract: provides subprogram access subtract_two_numbers;  
end add_subtract_interface;

thread sender
	features
		add_subtract: requires subprogram group access add_subtract_interface;
		eventPort: out event port;
		eventDataPort: out event data port Base_Types::Unsigned_32;
		dataPort: out data port Base_Types::Unsigned_32;
		sharedData: requires data access shared_data.impl;

	properties 
		Dispatch_Protocol => Periodic;
		Period => 250 ms;		
		Source_Text => ("user_code/user_sender.c");
		Initialize_Entrypoint_Source_Text => "sender_init";
		SB_SYS::Compute_Entrypoint_Source_Text => ("periodic_ping");

end sender ; 
 
thread receiver
	features
		add_subtract: provides subprogram group access add_subtract_interface;
		eventPort: in event port;
		eventDataPort: in event data port Base_Types::Unsigned_32 {
			SB_SYS::Compute_Entrypoint_Source_Text => ("eventDataPort_callback");			
		};
		dataPort: in data port Base_Types::Unsigned_32;
		sharedData: requires data access shared_data.impl;
    	
	properties 
		Dispatch_Protocol => Sporadic;
		Source_Text => ("user_code/user_receiver.c");
		
end receiver ;

processor d_processor
end d_processor;

processor implementation d_processor.Impl
end d_processor.Impl;
	
process proc
end proc;

process implementation proc.Impl
	subcomponents
		s: thread sender;
		r: thread receiver;
		
		shared: data shared_data.impl {
			SB_SYS::CAmkES_Owner_Thread => "sender";
		};
		
		spg: subprogram group add_subtract_interface;
		sp1: subprogram add_two_numbers;
		sp2: subprogram subtract_two_numbers;
	connections
		s_to_r_subprogramGroup : subprogram group access s.add_subtract -> r.add_subtract;
		s_to_r_event: port s.eventPort -> r.eventPort;
		s_to_r_eventData: port s.eventDataPort -> r.eventDataPort;
		s_to_r_data: port s.dataPort -> r.dataPort;
		s_to_r_sharedDataS: data access shared -> s.sharedData;
		s_to_r_sharedDataR: data access shared -> r.sharedData;
end proc.Impl;

system sys
end sys;

system implementation sys.impl
	subcomponents
		tl: process proc.Impl;
		proc: processor d_processor.Impl;
	properties
		actual_processor_binding => (reference (proc)) applies to tl;
end sys.impl;

end ConnectionExamples;